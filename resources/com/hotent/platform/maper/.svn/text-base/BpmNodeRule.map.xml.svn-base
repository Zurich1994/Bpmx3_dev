<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.platform.model.bpm.BpmNodeRule">
	<resultMap id="BpmNodeRule" type="com.hotent.platform.model.bpm.BpmNodeRule">
		<id property="ruleId" column="ruleId" jdbcType="NUMERIC"/>
		<result property="ruleName" column="ruleName" jdbcType="VARCHAR"/>
		<result property="conditionCode" column="conditionCode" jdbcType="CLOB"/>
		<result property="actDefId" column="actDefId" jdbcType="VARCHAR"/>
		<result property="priority" column="priority" jdbcType="NUMERIC"/>
		<result property="targetNode" column="targetNode" jdbcType="VARCHAR"/>
		<result property="targetNodeName" column="targetNodeName" jdbcType="VARCHAR"/>
		<result property="memo" column="memo" jdbcType="VARCHAR"/>
		<result property="nodeId" column="nodeId" jdbcType="VARCHAR"/>
	</resultMap>
	
	<sql id="columns">
		ruleId,ruleName,conditionCode,actDefId,priority,targetNode,targetNodeName,memo,nodeId
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(ruleId)"> AND ruleId  =#{ruleId} </if>
			<if test="@Ognl@isNotEmpty(ruleName)"> AND ruleName  LIKE #{ruleName}  </if>
			<if test="@Ognl@isNotEmpty(conditionCode)"> AND conditionCode  LIKE #{conditionCode}  </if>
			<if test="@Ognl@isNotEmpty(actDefId)"> AND actDefId  LIKE #{actDefId}  </if>
			<if test="@Ognl@isNotEmpty(nodeId)"> AND nodeId  LIKE #{nodeId}  </if>
			<if test="@Ognl@isNotEmpty(priority)"> AND priority  =#{priority} </if>
			<if test="@Ognl@isNotEmpty(targetNode)"> AND targetNode  LIKE #{targetNode}  </if>
			<if test="@Ognl@isNotEmpty(targetNodeName)"> AND targetNodeName  LIKE #{targetNodeName}  </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.platform.model.bpm.BpmNodeRule">
		INSERT INTO bpm_node_rule
		(<include refid="columns"/>)
		VALUES
		(#{ruleId,jdbcType=NUMERIC}, #{ruleName,jdbcType=VARCHAR}, #{conditionCode,jdbcType=CLOB}, #{actDefId,jdbcType=VARCHAR}, #{priority,jdbcType=NUMERIC}, #{targetNode,jdbcType=VARCHAR}, #{targetNodeName,jdbcType=VARCHAR},  #{memo,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM BPM_NODE_RULE 
		WHERE
		ruleId=#{ruleId}
	</delete>
	
	<update id="update" parameterType="com.hotent.platform.model.bpm.BpmNodeRule">
		UPDATE bpm_node_rule SET
		ruleName=#{ruleName,jdbcType=VARCHAR} , 
		conditionCode=#{conditionCode,jdbcType=CLOB} , 
		actDefId=#{actDefId,jdbcType=VARCHAR} , 
		priority=#{priority,jdbcType=NUMERIC} , 
		targetNode=#{targetNode,jdbcType=VARCHAR} , 
		targetNodeName=#{targetNodeName,jdbcType=VARCHAR} , 
		memo=#{memo,jdbcType=VARCHAR} , 
		nodeId=#{nodeId,jdbcType=VARCHAR} 
		WHERE
		ruleId=#{ruleId}
	</update>
	
	<update id="reSort" parameterType="Map">
		UPDATE BPM_NODE_RULE SET priority=#{priority} WHERE ruleId=#{ruleId}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="BpmNodeRule">
		SELECT <include refid="columns"/>
		FROM BPM_NODE_RULE
		WHERE
		ruleId=#{ruleId}
	</select>
	
	<select id="getAll" resultMap="BpmNodeRule">
		SELECT <include refid="columns"/>
		FROM BPM_NODE_RULE   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ruleId  desc
		</if>
	</select>
	
	<select id="getByDefIdNodeId" resultMap="BpmNodeRule">
		SELECT * from BPM_NODE_RULE 
		<where>
		 <if test="@Ognl@isNotEmpty(actDefId)">
		   and actDefId=#{actDefId}
	     </if>
	     <if test="@Ognl@isNotEmpty(nodeId)">
		   and nodeId=#{nodeId}
		 </if> 
		 </where>
		 order by priority
	</select>
	
	<select id="getByActDefId" resultMap="BpmNodeRule">
		SELECT <include refid="columns"/> from BPM_NODE_RULE 
		where actDefId=#{actDefId}
	</select>
	
	<delete id="delByActDefId" parameterType="String">
		DELETE FROM BPM_NODE_RULE 
		WHERE
		actDefId=#{actDefId}
	</delete>
</mapper>
