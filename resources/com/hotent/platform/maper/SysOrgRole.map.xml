<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.platform.model.system.SysOrgRole">
	<resultMap id="SysOrgRole" type="com.hotent.platform.model.system.SysOrgRole">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="orgid" column="ORGID" jdbcType="NUMERIC"/>
		<result property="roleid" column="ROLEID" jdbcType="NUMERIC"/>
		<result property="roleName" column="ROLENAME" jdbcType="VARCHAR"/>
		<result property="comment" column="COMMENT" jdbcType="VARCHAR"/>
		<result property="orgName" column="ORGNAME" jdbcType="VARCHAR"/>
		<result property="canDel" column="canDel" jdbcType="NUMERIC"/>
	</resultMap>

	<sql id="columns">
		ID,ORGID,ROLEID,CANDEL
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND ID  =#{id} </if>
			<if test="@Ognl@isNotEmpty(orgid)"> AND ORGID  =#{orgid} </if>
			<if test="@Ognl@isNotEmpty(roleid)"> AND ROLEID  =#{roleid} </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.platform.model.system.SysOrgRole">
		INSERT INTO SYS_ORG_ROLE
		(ID,ORGID,ROLEID,CANDEL)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{orgid,jdbcType=NUMERIC}, #{roleid,jdbcType=NUMERIC},#{canDel,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM SYS_ORG_ROLE 
		WHERE
		ID=#{id}
	</delete>
	
	<delete id="delByRoleId" parameterType="java.lang.Long">
		DELETE FROM SYS_ORG_ROLE 
		WHERE roleid=#{roleId}
	</delete>
	
	<delete id="delByOrgId" parameterType="java.lang.Long">
		DELETE FROM SYS_ORG_ROLE 
		WHERE orgid=#{orgId}
	</delete>
	
	<delete id="delByOrgPath" parameterType="java.lang.String">
		DELETE FROM SYS_ORG_ROLE 
		WHERE orgid in (
		select o.orgId from sys_org o where o.path like #{path})
	</delete>
	<delete id="delByOrgIdAndRoleId" parameterType="java.lang.Long">
		DELETE FROM SYS_ORG_ROLE 
		WHERE orgid = #{orgId} and  roleid=#{roleId}
	</delete>
	
	<update id="update" parameterType="com.hotent.platform.model.system.SysOrgRole">
		UPDATE SYS_ORG_ROLE SET
		ORGID=#{orgid,jdbcType=NUMERIC},
		ROLEID=#{roleid,jdbcType=NUMERIC},
		CANDEL=#{canDel,jdbcType=NUMERIC}
		WHERE
		ID=#{id}
	</update>
	
	<select id="getCountByOrgidRoleid" parameterType="java.util.Map" resultMap="SysOrgRole">
	    select * from sys_org_role t where t.orgid=#{orgId} and t.roleid=#{roleId}
	</select>
	
	<select id="getRolesByOrgId" parameterType="java.lang.Long" resultMap="SysOrgRole">
		select t.id,t.orgid,t.roleid ,t.canDel,f.alias as "role.alias", f.rolename as "role.roleName" 
		,f.memo as "role.memo", sys.sysName "role.systemName", m.orgname from sys_org_role t 
    	left join sys_org m on t.orgid=m.orgid 
    	left join sys_role f on t.roleid=f.roleid left join sys_subsystem sys on f.systemId=sys.systemId
		where t.orgid=#{orgId}
	</select>
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="SysOrgRole">
		SELECT <include refid="columns"/>
		FROM SYS_ORG_ROLE
		WHERE
		ID=#{id}
	</select>
	
	<select id="getAll" resultMap="SysOrgRole">
		SELECT <include refid="columns"/>
		FROM SYS_ORG_ROLE   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
	
	
	
	
</mapper>
