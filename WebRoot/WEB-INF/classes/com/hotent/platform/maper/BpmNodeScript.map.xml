<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.platform.model.bpm.BpmNodeScript">
	<resultMap id="BpmNodeScript" type="com.hotent.platform.model.bpm.BpmNodeScript">
		<id property="id" column="id" jdbcType="NUMERIC"/>
		<result property="memo" column="memo" jdbcType="VARCHAR"/>
		<result property="nodeId" column="nodeId" jdbcType="VARCHAR"/>
		<result property="actDefId" column="actDefId" jdbcType="VARCHAR"/>
		<result property="script" column="script" jdbcType="CLOB"/>
		<result property="scriptType" column="scriptType" jdbcType="NUMERIC"/>
	</resultMap>
	<sql id="columns">
		id,memo,nodeId,actDefId,script,scriptType
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(memo)"> AND memo  LIKE #{memo}  </if>
			<if test="@Ognl@isNotEmpty(nodeId)"> AND nodeId  LIKE #{nodeId}  </if>
			<if test="@Ognl@isNotEmpty(actDefId)"> AND actDefId  LIKE #{actDefId}  </if>
			<if test="@Ognl@isNotEmpty(script)"> AND script  LIKE #{script}  </if>
			<if test="@Ognl@isNotEmpty(scriptType)"> AND scriptType  =#{scriptType} </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.platform.model.bpm.BpmNodeScript">
		INSERT INTO bpm_node_script
		(<include refid="columns"/>)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{memo,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}, #{actDefId,jdbcType=VARCHAR}, #{script,jdbcType=CLOB}, #{scriptType,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM BPM_NODE_SCRIPT 
		WHERE
		id=#{id}
	</delete>
	
	<delete id="delByDefAndNodeId" parameterType="Map">
		DELETE FROM BPM_NODE_SCRIPT 
		WHERE nodeId=#{nodeId} and actDefId= #{actDefId}
	 
	</delete>
	
	<update id="update" parameterType="com.hotent.platform.model.bpm.BpmNodeScript">
		UPDATE bpm_node_script SET
		memo=#{memo,jdbcType=VARCHAR} , 
		nodeId=#{nodeId,jdbcType=VARCHAR} , 
		actDefId=#{actDefId,jdbcType=VARCHAR} , 
		script=#{script,jdbcType=VARCHAR} , 
		scriptType=#{scriptType,jdbcType=NUMERIC} 
		WHERE
		id=#{id}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="BpmNodeScript">
		SELECT <include refid="columns"/>
		FROM BPM_NODE_SCRIPT
		WHERE
		id=#{id}
	</select>
	
	<select id="getAll" resultMap="BpmNodeScript">
		SELECT <include refid="columns"/>
		FROM BPM_NODE_SCRIPT   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by id  desc
		</if>
	</select>
	<select id="getBpmNodeScript" parameterType="Map" resultMap="BpmNodeScript">
		SELECT <include refid="columns"/>
		FROM BPM_NODE_SCRIPT
		<where>
			<if test="@Ognl@isNotEmpty(nodeId)">
			  and nodeId=#{nodeId}
			</if>
			<if test="@Ognl@isNotEmpty(actDefId)">
			  and actDefId=#{actDefId}
			</if>
		</where>
				
	</select>
	<select id="getScriptByType" parameterType="Map" resultMap="BpmNodeScript">
		SELECT <include refid="columns"/>
		FROM BPM_NODE_SCRIPT
		WHERE nodeId=#{nodeId} and actDefId=#{actDefId} and scriptType=#{scriptType,jdbcType=NUMERIC}				
	</select>
	 <delete id="delByActDefId" parameterType="String">
		DELETE FROM BPM_NODE_SCRIPT  WHERE actDefId= #{actDefId}
	</delete>
	
	
</mapper>
