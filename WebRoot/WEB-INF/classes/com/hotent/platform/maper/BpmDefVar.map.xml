<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotent.platform.model.bpm.BpmDefVar">
	<resultMap id="BpmDefVar" type="com.hotent.platform.model.bpm.BpmDefVar">
		<id property="varId" column="varId" jdbcType="NUMERIC" />
		<result property="defId" column="defId" jdbcType="NUMERIC" />
		<result property="varName" column="varName" jdbcType="VARCHAR" />
		<result property="varKey" column="varKey" jdbcType="VARCHAR" />
		<result property="varDataType" column="varDataType" jdbcType="VARCHAR" />
		<result property="defValue" column="defValue" jdbcType="VARCHAR" />
		<result property="nodeName" column="nodeName" jdbcType="VARCHAR" />
		<result property="versionId" column="versionId" jdbcType="NUMERIC" />
		<result property="actDeployId" column="actDeployId" jdbcType="NUMERIC" />
		<result property="varScope" column="varScope" jdbcType="VARCHAR" />
		<result property="nodeId" column="nodeId" jdbcType="VARCHAR" />
<result property="varType" column="varType" jdbcType="VARCHAR" />
		
	</resultMap>
	<sql id="columns">
		varId,defId,varName,varKey,varDataType,defValue,nodeName,actDeployId,varScope,nodeId,varType
	</sql>

	<sql id="dynamicWhere">
		<where>

			<if test="@Ognl@isNotEmpty(defId)"> AND defId =#{defId} </if>
			<if test="@Ognl@isNotEmpty(varName)"> AND varName LIKE #{varName}  </if>
			<if test="@Ognl@isNotEmpty(varKey)"> AND varKey LIKE #{varKey}  </if>
			<if test="@Ognl@isNotEmpty(varDataType)"> AND varDataType LIKE #{varDataType}  </if>
			<if test="@Ognl@isNotEmpty(defValue)"> AND defValue LIKE #{defValue}  </if>
			<if test="@Ognl@isNotEmpty(nodeName)"> AND nodeName LIKE #{nodeName}  </if>
			<if test="@Ognl@isNotEmpty(versionId)"> AND versionId =#{versionId} </if>
			<if test="@Ognl@isNotEmpty(actDeployId)"> AND actDeployId =#{actDeployId} </if>
			<if test="@Ognl@isNotEmpty(varScope)"> AND varScope LIKE #{varScope}  </if>
<if test="@Ognl@isNotEmpty(varType)"> AND varType LIKE #{varType}  </if>			
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.platform.model.bpm.BpmDefVar">
		INSERT INTO BPM_DEF_VARS
		(
		<include refid="columns" />
		)
		VALUES
		(#{varId,jdbcType=NUMERIC}, #{defId,jdbcType=NUMERIC},
		#{varName,jdbcType=VARCHAR}, #{varKey,jdbcType=VARCHAR},
		#{varDataType,jdbcType=VARCHAR}, #{defValue,jdbcType=VARCHAR},
		#{nodeName,jdbcType=VARCHAR}, #{actDeployId,jdbcType=NUMERIC},
		#{varScope,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR},
		#{varType,jdbcType=VARCHAR})
	</insert>

	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM BPM_DEF_VARS
		WHERE
		varId=#{varId}
	</delete>

	<update id="update" parameterType="com.hotent.platform.model.bpm.BpmDefVar">
		UPDATE bpm_def_vars SET
		defId=#{defId,jdbcType=NUMERIC} ,
		varName=#{varName,jdbcType=VARCHAR} ,
		varKey=#{varKey,jdbcType=VARCHAR} ,
		varDataType=#{varDataType,jdbcType=VARCHAR} ,
		defValue=#{defValue,jdbcType=VARCHAR} ,
		nodeName=#{nodeName,jdbcType=VARCHAR} ,
		actDeployId=#{actDeployId,jdbcType=NUMERIC} ,
		varScope=#{varScope,jdbcType=VARCHAR} ,
		nodeId=#{nodeId,jdbcType=VARCHAR} ,
varType=#{varType,jdbcType=VARCHAR} 		
		WHERE
		varId=#{varId}
	</update>

	<select id="getById" parameterType="java.lang.Long" resultMap="BpmDefVar">
		SELECT
		<include refid="columns" />
		FROM BPM_DEF_VARS
		WHERE
		varId=#{varId}
	</select>

	<select id="getAll" resultMap="BpmDefVar">
		SELECT
		<include refid="columns" />
		FROM BPM_DEF_VARS
		where defId =#{defId}
		<if test="varName !=null"> AND varName LIKE #{varName}  </if>
		<if test="orderField !=null">
			order by ${orderField} ${orderSeq}
		</if>
		<if test="orderField ==null">
			order by varId desc
		</if>
	</select>
	<!-- 判断变量名是否存在 -->
	<select id="isVarNameExist" resultType="int">
		SELECT count(*) amount
		FROM BPM_DEF_VARS
		WHERE
		<if test="varName !=null">
			(defId =#{defId} and varName=#{varName})
		</if>
		<if test="varKey !=null">
			<if test="varName !=null"> or </if>
			(defId=#{defId} and varKey=#{varKey})
		</if>
	</select>


	<!-- 根据流程发布ID和活动节点ID获取流程 变量列表 -->
	<select id="getByDeployAndNode" resultMap="BpmDefVar">
		select * from
		bpm_def_vars where (actDeployId=#{actDeployId} and varScope='global')
		or (actDeployId=#{actDeployId} and nodeId=#{nodeId})
	</select>

	<select id="getVars" resultMap="BpmDefVar">
		select * from BPM_DEF_VARS where
		defId=#{defId} order by varId desc
	</select>
	<delete id="delByDefId" parameterType="java.lang.Long">
		delete from BPM_DEF_VARS
		where defId=#{defId}
	</delete>

	<select id="getByDefId" parameterType="java.lang.Long"
		resultMap="BpmDefVar">
		SELECT
		<include refid="columns" />
		FROM BPM_DEF_VARS
		WHERE
		defId=#{defId,jdbcType=NUMERIC}
	</select>
</mapper>
